{"ast":null,"code":"var _jsxFileName = \"/Users/matthewproteau/Desktop/Dev Portfolio/terminal/src/ProjectFolder/Code.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport codingProjects from \"./codingProjects\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Code() {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const handleClick = title => {\n    const codeWork = codingProjects.find(item => item.title === title);\n    setSelectedProject(codeWork);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-title\",\n          children: [\"Projects\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/ProjectFolder/ThreeD\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"project-button\",\n                children: \"3D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/ProjectFolder/Code\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"project-button\",\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"projectList-header\",\n            children: \"Coding Projects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), codingProjects.map((project, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-list\",\n            onClick: () => handleClick(project.title),\n            children: project.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: selectedProject && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"art-title\",\n            children: selectedProject.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-scroll-container\",\n            children: selectedProject.imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"{'}\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedProject.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: selectedProject.githubRepo,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"button-link\",\n            children: \"Github Repository\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: selectedProject.deployedApp,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"button-link\",\n            children: \"Deployed Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Code, \"HN9pdtfYpwVsoSKTsDvm2nr85II=\");\n_c = Code;\nexport default Code;\nvar _c;\n$RefreshReg$(_c, \"Code\");","map":{"version":3,"names":["React","useState","Link","codingProjects","jsxDEV","_jsxDEV","Code","_s","selectedProject","setSelectedProject","handleClick","title","codeWork","find","item","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","onClick","imageUrls","imageUrl","src","alt","description","href","githubRepo","target","rel","deployedApp","_c","$RefreshReg$"],"sources":["/Users/matthewproteau/Desktop/Dev Portfolio/terminal/src/ProjectFolder/Code.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport codingProjects from \"./codingProjects\";\n\nfunction Code() {\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  const handleClick = (title) => {\n    const codeWork = codingProjects.find((item) => item.title === title);\n    setSelectedProject(codeWork);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"view-title\">\n            Projects\n            <div className=\"project-tabs\">\n              <Link to=\"/ProjectFolder/ThreeD\">\n                <button className=\"project-button\">3D</button>\n              </Link>\n              <Link to=\"/ProjectFolder/Code\">\n                <button className=\"project-button\">Code</button>\n              </Link>\n            </div>\n          </div>\n          <ul className=\"list-view\">\n            <span className=\"projectList-header\">Coding Projects:</span>\n            {codingProjects.map((project, index) => (\n              <li\n                key={index}\n                className=\"work-list\"\n                onClick={() => handleClick(project.title)}\n              >\n                {project.title}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"col-md-6\">\n          {selectedProject && (\n            <div className=\"work-view\">\n              <p className=\"art-title\">{selectedProject.title}</p>\n              <div className=\"image-scroll-container\">\n                {selectedProject.imageUrls.map((imageUrl, index)=>(\n                  <img\n                    key={index}\n                    src={imageUrl}\n                    alt=\"{'}\"\n                    />\n                ))}\n              </div>\n              <p>{selectedProject.description}</p>\n              <a\n                href={selectedProject.githubRepo}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"button-link\"\n              >\n                Github Repository\n              </a>\n              <a\n                href={selectedProject.deployedApp}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"button-link\"\n              >\n                Deployed Application\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Code;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}